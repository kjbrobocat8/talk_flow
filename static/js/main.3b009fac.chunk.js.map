{"version":3,"sources":["components/MyMessage.jsx","components/TheirMessage.jsx","components/MessageForm.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MyMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","trim","sendMessage","onSubmit","TextField","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","display","files","bind","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","href","keys","Object","key","lastMessageKey","width","renderMessages","height","Modal","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","LoginForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b009fac.chunk.js","sourcesContent":["const MyMessage = ({ message }) => {\r\n    if(message?.attachments?.length > 0) {\r\n        return (\r\n            <img \r\n            src={message.attachments[0].file}\r\n            alt=\"message-attachment\"\r\n            className=\"message-image\"\r\n            style={{float:'right'}}\r\n            />\r\n        )\r\n    }\r\n    return(\r\n        <div className=\"message\" style={{float:'right', marginRight: '18px', color:'white', backgroundColor:'#6666ff'}}>\r\n            {message.text}\r\n        </div>\r\n    )\r\n}\r\nexport default MyMessage;","const TheirMessage = ({lastMessage, message}) => {\r\n    const isFirstMessageByUser= !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n    return(\r\n        <div className=\"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div \r\n                  className=\"message-avatar\"\r\n                  style={{backgroundImage: `url(${message?.sender?.avatar})`}}\r\n                />\r\n            )}\r\n      {message.attachments && message.attachments.length > 0\r\n        ? (\r\n          <img\r\n            src={message.attachments[0].file}\r\n            alt=\"message-attachment\"\r\n            className=\"message-image\"\r\n            style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n          />\r\n        )\r\n        : (\r\n          <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\r\n            {message.text}\r\n          </div>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\nexport default TheirMessage;","import { useState } from 'react';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState('');\r\n  const { chatId, creds } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n\r\n    isTyping(props, chatId);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const text = value.trim();\r\n\r\n    if (text.length > 0) {\r\n      sendMessage(creds, chatId, { text });\r\n    }\r\n\r\n    setValue('');\r\n  };\r\n\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatId, { files: event.target.files, text: '' });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        placeholder=\"Send a message...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <label htmlFor=\"upload-button\">\r\n        <span className=\"image-button\">\r\n          <PictureOutlined className=\"picture-icon\" />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        id=\"upload-button\"\r\n        style={{ display: 'none' }}\r\n        onChange={handleUpload.bind(this)}\r\n      />\r\n      <button type=\"submit\" className=\"send-button\">\r\n        <SendOutlined className=\"send-icon\" />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageForm;","import MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\nimport MessageForm from './MessageForm';\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\r\n    <div\r\n      key={`read_${index}`}\r\n      className=\"read-receipt\"\r\n      style={{\r\n        float: isMyMessage ? 'right' : 'left',\r\n        backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\r\n      }}\r\n    />\r\n  ));\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage\r\n              ? <MyMessage message={message} />\r\n              : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\r\n          </div>\r\n          <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n            {renderReadReceipts(message, isMyMessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!chat) return <div />;\r\n\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\" style={{color: 'indigo'}}>{chat?.title} <button><a href=\"https://meet.google.com/dpa-fiys-kyp?authuser=1\"><img src=\"https://raw.githubusercontent.com/google/material-design-icons/master/src/av/videocam/materialicons/24px.svg\" alt=\"\"/></a></button></div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => ` ${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height: '100px' }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;","import { useState } from 'react';\r\nimport axios from 'axios';\r\nconst projectID = 'bba88481-5a6a-4557-8827-7d70d92dab77';\r\n\r\nconst Modal = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = { 'Project-ID': projectID, 'User-Name': username, 'User-Secret': password };\r\n\r\n    try {\r\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n      localStorage.setItem('username', username);\r\n      localStorage.setItem('password', password);\r\n\r\n      window.location.reload();\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Oops, incorrect login name or password.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">Talk flow</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Start chatting</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <h1>{error}</h1>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Modal;","import { ChatEngine } from 'react-chat-engine';\r\n\r\nimport ChatFeed from './components/ChatFeed';\r\nimport LoginForm from './components/LoginForm';\r\nimport './App.css';\r\n\r\nconst projectID = 'bba88481-5a6a-4557-8827-7d70d92dab77';\r\n\r\nconst App = () => {\r\n  if (!localStorage.getItem('username')) return <LoginForm />;\r\n\r\n  return (\r\n    <ChatEngine\r\n      height=\"100vh\"\r\n      projectID={projectID}\r\n      userName={localStorage.getItem('username')}\r\n      userSecret={localStorage.getItem('password')}\r\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n      onNewMessage={() => new Audio('https://github.com/kjbrobocat8/Chat.It/raw/main/notification_simple-01.wav').play()}\r\n    />\r\n  );\r\n};\r\n\r\n// infinite scroll, logout, more customizations...\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}